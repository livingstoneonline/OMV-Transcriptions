Image Prep Workflow

0) Use Zotero to set item name

1) Save original image as TIF with UID name: liv_012001_0001.tif

2) ID images that fall below the 400, 700, 1000, 1300, and 1800; or 200, 300, 400, 500 threshold:

identify -format "%f: %wx%h\n" *.tif *.jpg

3) Convert in terminal (copy and paste all code below at once):

****Regular images************

mogrify -format jpg -resize 1800x1800 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1800 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1800 && find . -exec rename 's|.jpg|-1800px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 1300x1300 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1300 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1300 && find . -exec rename 's|.jpg|-1300px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 1000x1000 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1000 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/1000 && find . -exec rename 's|.jpg|-1000px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 700x700 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/700 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/700 && find . -exec rename 's|.jpg|-700px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 400x400 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/400 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-regular/400 && find . -exec rename 's|.jpg|-400px.jpg|' {} + && cd -

******Artifact Thumbnails-tiffs**********

mogrify -format jpg -resize 500x500 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/500 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/500 && find . -exec rename 's|.jpg|-500px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 400x400 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/400 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/400 && find . -exec rename 's|.jpg|-400px.jpg|' {} + && cd -

mogrify -format jpg -resize 300x300 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/300 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/300 && find . -exec rename 's|.jpg|-300px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 200x200 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/200 *.tif  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/200 && find . -exec rename 's|.jpg|-200px.jpg|' {} + && cd -

******Artifact Thumbnails-jpgs**********

mogrify -format jpg -resize 500x500 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/500 *.jpg  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/500 && find . -exec rename 's|.jpg|-500px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 400x400 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/400 *.jpg && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/400 && find . -exec rename 's|.jpg|-400px.jpg|' {} + && cd -

mogrify -format jpg -resize 300x300 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/300 *.jpg  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/300 && find . -exec rename 's|.jpg|-300px.jpg|' {} + && cd - && 

mogrify -format jpg -resize 200x200 -sampling-factor 4:2:0 -strip -quality 85 -interlace JPEG -colorspace RGB -path ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/200 *.jpg  && cd ~/GitHub/One-More-Voice/0_dev/0-image-staging-artifacts/200 && find . -exec rename 's|.jpg|-200px.jpg|' {} + && cd -

****************

3) Move all generated files:

find . -type f -name \*.jpg -exec mv \{\} ~/GitHub/One-More-Voice/artifact-images/thumbnails \;

4) Remove images that do not meet threshold requirements

5) Add code to HTML

[Note that the 1800 image isn't included, as it's only for images to be enlarged.]

	<!-- img sizes calculated using https://ausi.github.io/respimagelint/ -->
        <img class="image" src="site-images/liv_012001_0001-1300px.jpg" 
        srcset="
        site-images/liv_012001_0001-400px.jpg 400w, 
        site-images/liv_012001_0001-700px.jpg 700w, 
        site-images/liv_012001_0001-1000px.jpg 1000w,         
        site-images/liv_012001_0001-1300px.jpg 1300w
        " 
        sizes="
        (min-width: 1000px) 638px, 
        (min-width: 780px) 699px, 
        calc(100vw - 32px)
        "

****artifact-thumbnails*****

src="artifact-images/thumbnails/liv_021012_0001_thumbnail-500px.jpg" 
srcset="
artifact-images/thumbnails/liv_021012_0001_thumbnail-500px.jpg 500w, 
artifact-images/thumbnails/liv_021012_0001_thumbnail-400px.jpg 400w, 
artifact-images/thumbnails/liv_021012_0001_thumbnail-300px.jpg 300w, 
artifact-images/thumbnails/liv_021012_0001_thumbnail-200px.jpg 200w
" 
sizes="
(min-width: 1000px) 167px, 
(min-width: 780px) 183px, 
(min-width: 480px) calc(50vw - 68px), 
calc(100vw - 53px)
"

6) Open page and calculate image sizes using https://ausi.github.io/respimagelint/ and correct as needed.convert



References

https://developers.google.com/speed/pagespeed/insights/
https://web.dev/measure/

https://blog.chapagain.com.np/imagemagick-convertedit-multiple-images
https://www.howtogeek.com/109369/how-to-quickly-resize-convert-modify-images-from-the-linux-terminal/
https://www.imagemagick.org/script/identify.php
https://stackoverflow.com/questions/22751721/how-to-find-images-with-certain-size-in-terminal

image production tips
https://stackoverflow.com/questions/7261855/recommendation-for-compressing-jpg-files-with-imagemagick#7262050

"kMDItemPixelHeight>1100 && kMDItemPixelWidth>900"

https://blog.webjeda.com/lazy-load-css/
https://developers.google.com/web/tools/lighthouse/
https://www.npmjs.com/package/responsive-images-generator

https://css-tricks.com/a-guide-to-the-responsive-images-syntax-in-html/#using-srcset
https://web.dev/serve-images-with-correct-dimensions/
https://web.dev/uses-responsive-images/
https://web.dev/serve-responsive-images/
https://web.dev/uses-optimized-images/

https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images

https://developer.yahoo.com/performance/rules.html
